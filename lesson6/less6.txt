1, 2) 

use vk;

DROP TABLE IF EXISTS posts;
CREATE TABLE posts (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
	user_id INT UNSIGNED NOT NULL,
	community_id INT UNSIGNED,
	head VARCHAR(255),
	body TEXT NOT NULL,
	media_id INT UNSIGNED,
	created_at DATETIME DEFAULT NOW(),
    updated_at DATETIME DEFAULT NOW() ON UPDATE NOW()
);

DROP TABLE IF EXISTS likes;
CREATE TABLE likes (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
  user_id INT UNSIGNED NOT NULL,
  target_id INT UNSIGNED NOT NULL,
  target_type_id INT UNSIGNED NOT NULL,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- Таблица типов лайков
DROP TABLE IF EXISTS target_types;
CREATE TABLE target_types (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(255) NOT NULL UNIQUE,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- Заполняем target_types
INSERT INTO target_types (name) VALUES 
  ('messages'),
  ('users'),
  ('media'),
  ('posts');

-- Заполняем likes
INSERT INTO likes 
  SELECT 
    id, 
    FLOOR(1 + (RAND() * 100)), 
    FLOOR(1 + (RAND() * 100)),
    FLOOR(1 + (RAND() * 4)),
    CURRENT_TIMESTAMP 
  FROM messages;

-- Заполняем posts
INSERT INTO posts 
  SELECT 
    id, 
    FLOOR(1 + (RAND() * 100)), 
    FLOOR(1 + (RAND() * 8)),
    CONCAT('Message ', FLOOR(RAND()*100000), '. Sent at ', FROM_UNIXTIME(UNIX_TIMESTAMP('2020-04-30') - FLOOR(RAND() * 100000000))),
	CONCAT('Hello! ', messages.body),
    FLOOR(1 + (RAND() * 114)),
    CURRENT_TIMESTAMP,
    CURRENT_TIMESTAMP 
  FROM messages;
 


-- Добавляем внешние ключи
ALTER TABLE profiles
  ADD CONSTRAINT profiles_user_id_fk 
    FOREIGN KEY (user_id) REFERENCES users(id)
      ON DELETE CASCADE,
  ADD CONSTRAINT profiles_photo_id_fk
    FOREIGN KEY (photo_id) REFERENCES media(id)
      ON DELETE SET NULL;
 
ALTER TABLE messages
  ADD CONSTRAINT messages_from_user_id_fk 
    FOREIGN KEY (from_user_id) REFERENCES users(id),
  ADD CONSTRAINT messages_to_user_id_fk 
    FOREIGN KEY (to_user_id) REFERENCES users(id);

ALTER TABLE communities_users
  ADD CONSTRAINT communities_users_community_id_fk 
    FOREIGN KEY (community_id) REFERENCES communities(id),
  ADD CONSTRAINT communities_users_user_id_fk 
    FOREIGN KEY (user_id) REFERENCES users(id);
   
ALTER TABLE friendship
  ADD CONSTRAINT friendship_user_id_fk 
    FOREIGN KEY (user_id) REFERENCES users(id),
  ADD CONSTRAINT friendship_friend_id_fk 
    FOREIGN KEY (friend_id) REFERENCES users(id),
   ADD CONSTRAINT friendship_status_id_fk 
    FOREIGN KEY (status_id) REFERENCES friendship_statuses(id);

ALTER TABLE likes 
  ADD CONSTRAINT likes_user_id_fk 
    FOREIGN KEY (user_id) REFERENCES users(id),
  ADD CONSTRAINT likes_target_type_id_fk 
    FOREIGN KEY (target_type_id) REFERENCES target_types(id);
   
ALTER TABLE media 
  ADD CONSTRAINT media_user_id_fk 
    FOREIGN KEY (user_id) REFERENCES users(id),
  ADD CONSTRAINT media_media_type_id_fk 
    FOREIGN KEY (media_type_id) REFERENCES media_types(id);
   
ALTER TABLE posts 
  ADD CONSTRAINT posts_user_id_fk 
    FOREIGN KEY (user_id) REFERENCES users(id),
  ADD CONSTRAINT posts_community_id_fk 
    FOREIGN KEY (community_id) REFERENCES communities(id);
  
   
ALTER TABLE posts
    ADD CONSTRAINT posts_media_id_fk 
    FOREIGN KEY (media_id) REFERENCES media(id);
   


3).

mysql> SELECT SUM(likes) FROM (
    ->   SELECT birthday, (
    ->     SELECT COUNT(*) FROM likes WHERE 
    ->       (target_id IN (SELECT id FROM media WHERE media.user_id=profiles.user_id) AND target_type_id=3) OR 
    ->       (target_id IN (SELECT id FROM posts WHERE posts.user_id=profiles.user_id) AND target_type_id=4) OR 
    ->       (target_id IN (SELECT id FROM messages WHERE messages.from_user_id=profiles.user_id) AND target_type_id=1) OR
    ->       (target_id=profiles.user_id AND target_type_id=2)
    ->   ) AS likes  FROM profiles ORDER BY birthday DESC LIMIT 10
    -> ) AS top_likes;
+------------+
| SUM(likes) |
+------------+
|        100 |
+------------+
1 row in set (0,06 sec)

mysql> SELECT birthday, user_id, (
    ->   SELECT COUNT(*) FROM likes WHERE 
    ->     (target_id IN (SELECT id FROM media WHERE media.user_id=profiles.user_id) AND target_type_id=3) OR 
    ->     (target_id IN (SELECT id FROM posts WHERE posts.user_id=profiles.user_id) AND target_type_id=4) OR 
    ->     (target_id IN (SELECT id FROM messages WHERE messages.from_user_id=profiles.user_id) AND target_type_id=1) OR
    ->     (target_id=profiles.user_id AND target_type_id=2)
    ->   ) AS likes  FROM profiles ORDER BY birthday DESC LIMIT 10;
+------------+---------+-------+
| birthday   | user_id | likes |
+------------+---------+-------+
| 2018-12-28 |      21 |    10 |
| 2018-11-20 |      48 |     5 |
| 2018-11-11 |      26 |    25 |
| 2018-09-09 |       3 |     9 |
| 2018-01-25 |      67 |     3 |
| 2017-07-28 |      63 |     8 |
| 2017-02-27 |      96 |    16 |
| 2016-09-02 |      88 |     7 |
| 2015-11-08 |      29 |     5 |
| 2014-11-01 |      57 |    12 |
+------------+---------+-------+
10 rows in set (0,03 sec)


4) 

mysql> SELECT count(*) as likes, (SELECT gender FROM profiles where profiles.user_id=likes.user_id) AS gender FROM likes GROUP BY gender;
+-------+--------+
| likes | gender |
+-------+--------+
|   540 | m      |
|   460 | f      |
+-------+--------+
2 rows in set (0,01 sec)

5) 

mysql> SELECT CONCAT(first_name, ' ', last_name) AS name,                                                                                                                                                       ->   (SELECT COUNT(*) FROM posts WHERE user_id=users.id) + 
    ->   (SELECT COUNT(*) FROM messages WHERE from_user_id=users.id) + 
    ->   (SELECT COUNT(*) FROM likes WHERE user_id=users.id) AS activity 
    ->   FROM users ORDER BY activity LIMIT 10;
+-------------------+----------+
| name              | activity |
+-------------------+----------+
| Newton Volkman    |       18 |
| Crystal Cummerata |       21 |
| Jermey Jones      |       21 |
| Eliza Jerde       |       23 |
| Millie Yundt      |       23 |
| Eulah Renner      |       23 |
| Leanne Thiel      |       24 |
| Grant Hyatt       |       24 |
| Forest Wyman      |       24 |
| Loren Davis       |       24 |
+-------------------+----------+
10 rows in set (0,00 sec)

